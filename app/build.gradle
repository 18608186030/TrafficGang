apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
// 依赖插件脚本
if (!IS_DEBUG.toBoolean()) {
    apply from: 'tinker-support.gradle'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.stjy.trafficgang"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        renderscriptTargetApi 14
        renderscriptSupportModeEnabled true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file('zrc')
            storePassword 'zrc123456'
            keyAlias 'zrc123456'
            keyPassword 'zrc123456'
        }
        debug {
            storeFile file('zrc')
            storePassword 'zrc123456'
            keyAlias 'zrc123456'
            keyPassword 'zrc123456'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }


    // 多渠道打包（示例配置）
    productFlavors {
        flavorDimensions 'oppo,vivo'
        oppo {}
        vivo {}
    }



    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    sourceSets {
        main {
            jniLibs.srcDir 'libs'
        }
    }

    androidExtensions {
        experimental = true
    }
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    //ARouter
    kapt 'com.alibaba:arouter-compiler:1.2.2'
    //依赖baselib
    implementation project(':baselib')
    //work 依赖工作模块
    implementation project(':work')
    //maillist 依赖通讯录模块
    implementation project(':maillist')
    //person 依赖个人中心模块
    implementation project(':person')
    //login 登陆模块
    implementation project(':login')
}
